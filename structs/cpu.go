package structs

type CPU struct {
	Registers []byte
	PC        byte
	I         byte
	SP        byte
	DT        byte
	ST        byte
	Memory    [4096]byte
	Opcodes   []byte
}

func (c *CPU) InitMemory(data []byte) {
	c.AddROMToMemory(data)
	c.AddFontSetToMemory()
}

func (c *CPU) AddROMToMemory(data []byte) {
	for i, b := range data {
		c.Memory[0x200+i] = b
	}
}

func (c *CPU) AddFontSetToMemory() {
	fontset := []byte{
		0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
		0x20, 0x60, 0x20, 0x20, 0x70, // 1
		0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
		0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
		0x90, 0x90, 0xF0, 0x10, 0x10, // 4
		0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
		0xF0, 0x10, 0x20, 0x40, 0x40, // 7
		0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
		0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
		0xF0, 0x90, 0xF0, 0x90, 0x90, // A
		0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
		0xF0, 0x80, 0x80, 0x80, 0xF0, // C
		0xE0, 0x90, 0x90, 0x90, 0xE0, // D
		0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
		0xF0, 0x80, 0xF0, 0x80, 0x80} // F
	for i, b := range fontset {
		c.Memory[i] = b
	}
}
